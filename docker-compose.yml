services:
  # MySQL Database (commented out - using host MySQL)
  # mysql:
  #   image: mysql:8.0
  #   container_name: talki-mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: rootpassword
  #     MYSQL_DATABASE: talki_db
  #     MYSQL_USER: talki1234
  #     MYSQL_PASSWORD: 123456781!
  #     MYSQL_CHARSET: utf8mb4
  #     MYSQL_COLLATION: utf8mb4_unicode_ci
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #     - ./docker/mysql/init:/docker-entrypoint-initdb.d
  #   networks:
  #     - talki-network
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
  #     timeout: 20s
  #     retries: 10
  #     interval: 30s
  #     start_period: 60s
  #   restart: unless-stopped

  # Kafka (with Zookeeper)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: talki-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - talki-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: talki-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - talki-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s
    restart: unless-stopped

  # Spring Boot Application
  talki-backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: talki/talki-backend:${IMAGE_TAG:-latest}
    container_name: talki-backend
    depends_on:
      # mysql:
      #   condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://192.168.0.31:3306/talki_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: talki1234
      SPRING_DATASOURCE_PASSWORD: 123456781!
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      GRPC_SERVER_PORT: 9090
      SERVER_PORT: 8080
      JAVA_OPTS: "-Xmx512m -Xms256m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    networks:
      - talki-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 120s
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: talki-nginx
    depends_on:
      talki-backend:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
      - "9091:9090"  # gRPC proxy port
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - talki-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  app_logs:
    driver: local
  app_uploads:
    driver: local
  nginx_logs:
    driver: local

networks:
  talki-network:
    driver: bridge

